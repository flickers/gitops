apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: cluster-apps-matrix
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  generators:
    - matrix:
        generators:
          - git:
              repoURL: https://github.com/flickers/gitops.git
              revision: HEAD
              files:
                - path: "cluster-apps/**/config.json"
          - pullRequest:
              github:
                # The GitHub organization or user.
                owner: flickers
                # The Github repository
                repo: hallo-world
                # For GitHub Enterprise (optional)
  syncPolicy:
    preserveResourcesOnDeletion: true
  template:
    metadata:
      name: '{{ "{{" }} name {{ "}}" }}-{{ "{{" }} branch {{ "}}" }}-{{ "{{" }} number {{ "}}" }}'
      annotations:
        argocd.argoproj.io/manifest-generate-paths: '/{{ "{{" }} folderPath {{ "}}" }}'
        argocd-image-updater.argoproj.io/image-list: '{{ "{{" }} name {{ "}}" }}={{ "{{" }} image {{ "}}" }}'
        argocd-image-updater.argoproj.io/{{ "{{" }} name {{ "}}" }}.allow-tags: 'regexp:^sha-[0-9a-f]{7}$'
        argocd-image-updater.argoproj.io/{{ "{{" }} name {{ "}}" }}.update-strategy: latest
        argocd-image-updater.argoproj.io/{{ "{{" }} name {{ "}}" }}.helm.image-name: main.image.repository
        argocd-image-updater.argoproj.io/{{ "{{" }} name {{ "}}" }}.helm.image-tag: main.image.tag
        argocd-image-updater.argoproj.io/git-branch: master
        argocd-image-updater.argoproj.io/write-back-method: git:secret:argocd/git-creds
        repo-head-sha: '{{ "{{" }} head_sha {{ "}}" }}'
    spec:
      project: cluster-apps
      source:
        path: '{{ "{{" }} folderPath {{ "}}" }}'
        targetRevision: HEAD
        repoURL: https://github.com/flickers/gitops.git
        helm:
          parameters:
          - name: 'main.image.tag'
            value: '{{ "{{" }} head_sha {{ "}}" }}'
          valueFiles:
            - '{{ "{{" }} valueFile {{ "}}" }}'
      destination:
        namespace: '{{ "{{" }} namespace {{ "}}" }}'
        name: '{{ "{{" }} cluster {{ "}}" }}'
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - ApplyOutOfSyncOnly=true
          - CreateNamespace=true